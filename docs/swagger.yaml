definitions:
  models.RespErr:
    properties:
      code:
        description: HTTP-код ошибки
        type: integer
      message:
        allOf:
        - $ref: '#/definitions/models.RespErrMsg'
        description: Сообщение об ошибке
      status:
        description: Статус ответа = "error"
        type: string
    type: object
  models.RespErrMsg:
    properties:
      client:
        description: Ошибка для клиента (на русском языке)
        type: string
      detail:
        description: Ошибка для разработчика
        type: string
    type: object
  models.RespSucc:
    properties:
      body:
        allOf:
        - $ref: '#/definitions/models.RespSuccData'
        description: Тело ответа
      code:
        description: HTTP-код
        type: integer
      status:
        description: Статус ответа = "success"
        type: string
    type: object
  models.RespSuccData:
    properties:
      data: {}
    type: object
  models.UserAuthReq:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  models.UserRegReq:
    properties:
      email:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
paths:
  /api/v1/user/auth:
    post:
      consumes:
      - application/json
      description: Аутентифицирует пользователя с помощью логина и пароля. Выдает
        ему access/refresh пару токенов
      operationId: userAuth
      parameters:
      - description: Данные пользователя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UserAuthReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RespSucc'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.RespErr'
      summary: userAuth
      tags:
      - User
  /api/v1/user/confirm/registration:
    get:
      consumes:
      - application/json
      description: Завершает регистрацию пользователя и выдает access/refresh пару
        токенов
      operationId: userConfirm
      parameters:
      - description: Код подтверждения (с почты)
        in: query
        name: code
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RespSucc'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.RespErr'
      summary: userConfirm
      tags:
      - User
  /api/v1/user/refresh:
    get:
      consumes:
      - application/json
      description: Выдает новый access токен пользователю с помощью refresh токена
      operationId: userRefresh
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RespSucc'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.RespErr'
      security:
      - ApiKeyAuth: []
      summary: userRefresh
      tags:
      - User
  /api/v1/user/register:
    post:
      consumes:
      - application/json
      description: Валидирует и отправляет на почту пользователя ссылку для завершения
        регистрации
      operationId: userRegister
      parameters:
      - description: Данные пользователя
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UserRegReq'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RespSucc'
        default:
          description: ""
          schema:
            $ref: '#/definitions/models.RespErr'
      summary: userRegister
      tags:
      - User
  /status:
    get:
      consumes:
      - application/json
      description: Показывает статус запуска приложения (сервера).
      operationId: status
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.RespSucc'
      summary: status
      tags:
      - Liveness
swagger: "2.0"
